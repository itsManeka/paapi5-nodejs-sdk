{
	"name": "@itsmaneka/paapi5-nodejs-sdk",
	"version": "1.2.1",
	"description": "ProductAdvertisingAPI 5.0 NodeJS SDK with OffersV2 support - Enhanced fork with active maintenance",
	"main": "src/index.js",
	"types": "index.d.ts",
	"author": {
		"name": "itsManeka",
		"url": "https://github.com/itsManeka"
	},
	"homepage": "https://github.com/itsManeka/paapi5-nodejs-sdk",
	"license": "Apache-2.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/itsManeka/paapi5-nodejs-sdk"
	},
	"browser": {
		"fs": false
	},
	"dependencies": {
		"crypto-js": "^4.2.0",
		"dotenv": "^17.2.3",
		"superagent": "^3.8.3"
	},
	"devDependencies": {
		"expect.js": "~0.3.1",
		"mocha": "^11.7.4",
		"sinon": "1.17.3"
	},
	"keywords": [
		"amazon",
		"pa-api",
		"paapi",
		"ProductAdvertisingAPI",
		"OffersV2",
		"nodejs",
		"typescript"
	],
	"scripts": {
		"test": "npm run test:basic && npm run test:typescript",
		"test:basic": "node -e \"console.log('Testing SDK loading...'); const sdk = require('./src/index.js'); if (!sdk.ApiClient || !sdk.DefaultApi || !sdk.OffersV2) throw new Error('SDK components missing'); console.log('✅ SDK tests passed');\"",
		"test:typescript": "node -e \"console.log('Testing TypeScript definitions...'); const fs = require('fs'); if (!fs.existsSync('index.d.ts')) { console.log('❌ TypeScript definitions missing'); process.exit(1); } try { require('child_process').execSync('tsc index.d.ts --noEmit --strict --skipLibCheck', {stdio: 'inherit'}); console.log('✅ TypeScript definitions valid'); } catch(e) { console.log('⚠️ TypeScript not available or definitions invalid, skipping TS tests'); }\"",
		"audit:security": "npm audit --audit-level moderate",
		"release:patch": "node -e \"if (process.platform === 'win32') { require('child_process').exec('powershell -File scripts/release.ps1 patch'); } else { require('child_process').exec('bash scripts/release.sh patch'); }\"",
		"release:minor": "node -e \"if (process.platform === 'win32') { require('child_process').exec('powershell -File scripts/release.ps1 minor'); } else { require('child_process').exec('bash scripts/release.sh minor'); }\"",
		"release:major": "node -e \"if (process.platform === 'win32') { require('child_process').exec('powershell -File scripts/release.ps1 major'); } else { require('child_process').exec('bash scripts/release.sh major'); }\"",
		"sample:search": "node sampleSearchItemsApi.js",
		"sample:getitems": "node sampleGetItemsApi.js",
		"sample:offersv2": "node sampleOffersV2Api.js",
		"sample:browse": "node sampleGetBrowseNodesApi.js",
		"sample:variations": "node sampleGetVariationsApi.js",
		"lint": "echo 'Running basic code checks...' && node -e \"const fs = require('fs'); const files = fs.readdirSync('.').filter(f => f.startsWith('sample') && f.endsWith('.js')); files.forEach(f => { const content = fs.readFileSync(f, 'utf8'); if (content.includes('AKIA') && !content.includes('process.env')) throw new Error('Security issue in ' + f); }); console.log('✅ Code checks passed');\""
	},
	"files": [
		"src/",
		"index.d.ts",
		"README.md",
		"MIGRATION.md",
		"LICENSE.txt",
		"COPYING.txt",
		"NOTICE.txt"
	]
}
